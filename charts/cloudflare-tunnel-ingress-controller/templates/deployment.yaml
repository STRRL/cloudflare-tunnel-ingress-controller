apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cloudflare-tunnel-ingress-controller.fullname" $ }}
  labels:
    {{- include "cloudflare-tunnel-ingress-controller.labels" . | nindent 4 }}
    {{- with $.Values.labels }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- with $.Values.annotations }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "cloudflare-tunnel-ingress-controller.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cloudflare-tunnel-ingress-controller.selectorLabels" . | nindent 8 }}
        {{- with $.Values.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cloudflare-tunnel-ingress-controller.serviceAccountName" . }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext:
        {{- toYaml (omit .Values.podSecurityContext "enabled") | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- if .Values.securityContext.enabled }}
          securityContext:
            {{- toYaml (omit .Values.securityContext "enabled") | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - cloudflare-tunnel-ingress-controller
            - --ingress-class={{ .Values.ingressClass.name }}
            - --controller-class={{ .Values.ingressClass.controllerValue }}
            - --cloudflare-api-token=$(CLOUDFLARE_API_TOKEN)
            - --cloudflare-account-id=$(CLOUDFLARE_ACCOUNT_ID)
            - --cloudflare-tunnel-name=$(CLOUDFLARE_TUNNEL_NAME)
            - --namespace=$(NAMESPACE)
          env:
            - name: CLOUDFLARE_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ default (include "cloudflare-tunnel-ingress-controller.fullname" $) $.Values.existingSecretName }}
                  key: api-token
            - name: CLOUDFLARE_ACCOUNT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ default (include "cloudflare-tunnel-ingress-controller.fullname" $) $.Values.existingSecretName }}
                  key: cloudflare-account-id
            - name: CLOUDFLARE_TUNNEL_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ default (include "cloudflare-tunnel-ingress-controller.fullname" $) $.Values.existingSecretName }}
                  key: cloudflare-tunnel-name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
