apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cloudflare-tunnel-ingress-controller.fullname" . }}
  labels:
    {{- include "cloudflare-tunnel-ingress-controller.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "cloudflare-tunnel-ingress-controller.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cloudflare-tunnel-ingress-controller.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cloudflare-tunnel-ingress-controller.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - cloudflare-tunnel-ingress-controller
            - --ingress-class={{ .Values.ingressClass.name }}
            - --controller-class={{ .Values.ingressClass.controllerValue }}
            - --cloudflare-api-token=$(CLOUDFLARE_API_TOKEN)
            - --cloudflare-account-id=$(CLOUDFLARE_ACCOUNT_ID)
            - --cloudflare-tunnel-name=$(CLOUDFLARE_TUNNEL_NAME)
            - --namespace=$(NAMESPACE)
            - --cloudflared-protocol={{ .Values.cloudflared.protocol }}
          env:
            - name: CLOUDFLARE_API_TOKEN
              valueFrom:
                secretKeyRef:
                  {{- if hasKey .Values.cloudflare "secretRef" }}
                  name: {{ .Values.cloudflare.secretRef.name }}
                  key: {{ .Values.cloudflare.secretRef.apiTokenKey }}
                  {{- else }}
                  name: cloudflare-api
                  key: api-token
                  {{- end }}
            - name: CLOUDFLARE_ACCOUNT_ID
              valueFrom:
                secretKeyRef:
                  {{- if hasKey .Values.cloudflare "secretRef" }}
                  name: {{ .Values.cloudflare.secretRef.name }}
                  key: {{ .Values.cloudflare.secretRef.accountIDKey }}
                  {{- else }}
                  name: cloudflare-api
                  key: cloudflare-account-id
                  {{- end }}
            - name: CLOUDFLARE_TUNNEL_NAME
              valueFrom:
                secretKeyRef:
                  {{- if hasKey .Values.cloudflare "secretRef" }}
                  name: {{ .Values.cloudflare.secretRef.name }}
                  key: {{ .Values.cloudflare.secretRef.tunnelNameKey }}
                  {{- else }}
                  name: cloudflare-api
                  key: cloudflare-tunnel-name
                  {{- end }}
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CLOUDFLARED_IMAGE
              value: "{{ .Values.cloudflared.image.repository }}:{{ .Values.cloudflared.image.tag }}"
            - name: CLOUDFLARED_IMAGE_PULL_POLICY
              value: {{ .Values.cloudflared.image.pullPolicy | quote }}
            - name: CLOUDFLARED_REPLICA_COUNT
              value: {{ .Values.cloudflared.replicaCount | quote }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
