---
apiVersion: v1
kind: Service
metadata:
  name: cloudflare-tunnel-ingress-controller
  namespace: cloudflare-tunnel-ingress-controller-dev
  labels:
    app: cloudflare-tunnel-ingress-controller
spec:
  clusterIP: None
  selector:
    app: cloudflare-tunnel-ingress-controller
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cloudflare-tunnel-ingress-controller
  labels:
    app: cloudflare-tunnel-ingress-controller
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
      - ingressclasses
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - get
      - list
      - watch
      - update
      - create
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cloudflare-tunnel-ingress-controller
  namespace: cloudflare-tunnel-ingress-controller-dev
  labels:
    app: cloudflare-tunnel-ingress-controller
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cloudflare-tunnel-ingress-controller
  labels:
    app: cloudflare-tunnel-ingress-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cloudflare-tunnel-ingress-controller
subjects:
  - name: cloudflare-tunnel-ingress-controller
    kind: ServiceAccount
    # hardcoded namespace for dev
    namespace: cloudflare-tunnel-ingress-controller-dev
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudflare-tunnel-ingress-controller
  namespace: cloudflare-tunnel-ingress-controller-dev
  labels:
    app: cloudflare-tunnel-ingress-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cloudflare-tunnel-ingress-controller
  template:
    metadata:
      labels:
        app: cloudflare-tunnel-ingress-controller
    spec:
      volumes:
        - name: cloudflare-api-token
          secret:
            secretName: cloudflare-api
      containers:
        - name: cloudflare-tunnel-ingress-controller
          image: cloudflare-tunnel-ingress-controller
          command:
            - cloudflare-tunnel-ingress-controller
            - -v=10
            - --ingress-class=cloudflare-tunnel
            - --controller-class=strrl.dev/cloudflare-tunnel-ingress-controller
            - --cloudflare-api-token=$(CLOUDFLARE_API_TOKEN)
            - --cloudflare-account-id=$(CLOUDFLARE_ACCOUNT_ID)
            - --cloudflare-tunnel-name=$(CLOUDFLARE_TUNNEL_NAME)
            - --namespace=$(NAMESPACE)
          env:
            - name: CLOUDFLARED_REPLICA_COUNT
              value: "1"
            - name: CLOUDFLARED_IMAGE
              value: "cloudflare/cloudflared:latest"
            - name: CLOUDFLARED_IMAGE_PULL_POLICY
              value: "IfNotPresent"
            - name: CLOUDFLARE_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: cloudflare-api
                  key: api-token
            - name: CLOUDFLARE_ACCOUNT_ID
              valueFrom:
                secretKeyRef:
                  name: cloudflare-api
                  key: cloudflare-account-id
            - name: CLOUDFLARE_TUNNEL_NAME
              valueFrom:
                secretKeyRef:
                  name: cloudflare-api
                  key: cloudflare-tunnel-name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
      serviceAccountName: cloudflare-tunnel-ingress-controller
